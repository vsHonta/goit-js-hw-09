{"mappings":"AAAA,MAAMA,EAAO,CACTC,IAAMC,SAASC,cAAc,UAC7BC,KAAOF,SAASC,cAAc,SAC9BE,WAAaH,SAASC,cAAc,qBACpCG,KAAOJ,SAASC,cAAc,oBAC9BI,OAASL,SAASC,cAAc,wBAK9BF,IAAEO,EAAGJ,KAAEK,EAAIJ,WAAEK,EAAUJ,KAAEK,EAAIJ,OAAEK,GAAWZ,EAEhD,SAASa,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAS,IAAIC,SAAQ,CAACC,EAASC,KAEnBL,EACJI,EAAQ,C,SAAEN,E,MAAUC,IACXM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CAOhD,SAASO,GAAUR,SAAEA,EAAQC,MAAEA,IAC3BQ,QAAQC,IAAI,uBAAqBV,QAAiBC,M,CAItD,SAASU,GAAQX,SAAEA,EAAQC,MAAEA,IACzBQ,QAAQC,IAAI,sBAAoBV,QAAiBC,M,CAerDf,EAAKI,KAAKsB,iBAAiB,UAVTC,IACdA,EAAIC,iBAEJ,IAAK,IAAIC,EAAI,EAAGC,EAAaC,OAAOrB,EAAWsB,OAAQH,GAAKE,OAAOnB,EAAOoB,OACtEH,GAAK,EAAGC,GAAcC,OAAOpB,EAAKqB,OAClCC,YAAW,IAAMpB,EAAcgB,EAAGC,GAAYI,KAAKZ,GAAWa,MAAMV,IAAUK,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n    btn : document.querySelector('button'),\n    form : document.querySelector('.form'),\n    delayInput : document.querySelector('input[name=delay]'),\n    step : document.querySelector('input[name=step]'),\n    amount : document.querySelector('input[name=amount]'),\n}\n\n\n\nconst { btn, form, delayInput, step, amount } = refs\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    \n    return   new Promise((resolve, reject) => {\n        \n            if (shouldResolve) {\n            resolve({ position, delay })\n            } else { reject({ position, delay })}\n            \n        })\n}\n\n\n\nfunction onSuccess({ position, delay }) {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\n\nfunction onError({ position, delay }) {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\n\n\nconst onSubmit = (evt) => {\n    evt.preventDefault()\n\n    for (let i = 1, totalDelay = Number(delayInput.value); i <= Number(amount.value);\n        i += 1, totalDelay += Number(step.value)) {\n        setTimeout(() => createPromise(i, totalDelay).then(onSuccess).catch(onError), totalDelay)\n    }\n}\n\n\nrefs.form.addEventListener('submit', onSubmit)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function createPromise(position, delay) {\n    \n//     const promise = new Promise((resolve, reject) => {\n//         () => {\n//             const shouldResolve = Math.random() > 0.3;\n//             if (shouldResolve) {\n//                 resolve({\n//                     position,\n//                     delay,\n//                 })\n//             } else {\n//                 reject({\n//                     position,\n//                     delay,\n//                 })\n//             }\n//         }   \n//     })\n//     return promise\n    \n// }\n\n\n// let counter = 1\n\n\n// form.addEventListener('submit', (evt) => {\n//     evt.preventDefault()\n//     if (counter <= 3) {\n//         setInterval(createPromise(counter, step.value)\n//             .then(({ position, delay }) => {\n//             console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//         })\n//         .catch(({ position, delay }) => {\n//             console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//         }), 2000)\n//     }\n    \n    \n//     // setTimeout(createPromise(1, step.value).then((result)=>console.log(done)).catch((result) => console.log(Fail)), delayInput)\n\n//     // const interval = setInterval(createPromise(), step.value)\n//     // setTimeout(interval, delayInput.value)\n\n// })"],"names":["$47d4ff9957288465$var$refs","btn","document","querySelector","form","delayInput","step","amount","$47d4ff9957288465$var$btn","$47d4ff9957288465$var$form","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$onSuccess","console","log","$47d4ff9957288465$var$onError","addEventListener","evt","preventDefault","i","totalDelay","Number","value","setTimeout","then","catch"],"version":3,"file":"03-promises.453c228a.js.map"}